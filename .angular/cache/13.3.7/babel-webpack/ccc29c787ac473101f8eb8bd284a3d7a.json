{"ast":null,"code":"import { ref, uploadBytes, list } from '@angular/fire/storage';\nimport { async } from '@firebase/util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  uploadImage($event, name) {\n    const file = $event.target.files[0];\n    const imgRef = ref(this.storage, `imagen/` + name);\n    uploadBytes(imgRef, file).then(response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n\n  getImages() {\n    const imagesRef = ref(this.storage, `imagen/`);\n    list(imagesRef).then(async).catch();\n  }\n\n}\n\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\n\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/DevSadicSoul/Desktop/PortfolioWeb/portfolio-Frontend/src/app/service/image.service.ts"],"names":["ref","uploadBytes","list","async","i0","i1","ImageService","constructor","storage","uploadImage","$event","name","file","target","files","imgRef","then","response","getImages","catch","error","console","log","imagesRef","ɵfac","ImageService_Factory","t","ɵɵinject","Storage","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"AAAA,SAASA,GAAT,EAAcC,WAAd,EAA2BC,IAA3B,QAAuC,uBAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,uBAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACH;;AACDC,EAAAA,WAAW,CAACC,MAAD,EAASC,IAAT,EAAe;AACtB,UAAMC,IAAI,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAb;AACA,UAAMC,MAAM,GAAGf,GAAG,CAAC,KAAKQ,OAAN,EAAgB,SAAD,GAAYG,IAA3B,CAAlB;AACAV,IAAAA,WAAW,CAACc,MAAD,EAASH,IAAT,CAAX,CACKI,IADL,CACUC,QAAQ,IAAI;AAClB,WAAKC,SAAL;AACH,KAHD,EAIKC,KAJL,CAIWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJpB;AAKH;;AACDF,EAAAA,SAAS,GAAG;AACR,UAAMK,SAAS,GAAGvB,GAAG,CAAC,KAAKQ,OAAN,EAAgB,SAAhB,CAArB;AACAN,IAAAA,IAAI,CAACqB,SAAD,CAAJ,CACKP,IADL,CACUb,KADV,EAEKgB,KAFL;AAGH;;AAlBqB;;AAoB1Bb,YAAY,CAACkB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,YAAV,EAAwBF,EAAE,CAACuB,QAAH,CAAYtB,EAAE,CAACuB,OAAf,CAAxB,CAAP;AAA0D,CAAjH;;AACAtB,YAAY,CAACuB,KAAb,GAAqB,aAAczB,EAAE,CAAC0B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEzB,YAAT;AAAuB0B,EAAAA,OAAO,EAAE1B,YAAY,CAACkB,IAA7C;AAAmDS,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import { ref, uploadBytes, list } from '@angular/fire/storage';\r\nimport { async } from '@firebase/util';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/fire/storage\";\r\nexport class ImageService {\r\n    constructor(storage) {\r\n        this.storage = storage;\r\n    }\r\n    uploadImage($event, name) {\r\n        const file = $event.target.files[0];\r\n        const imgRef = ref(this.storage, `imagen/` + name);\r\n        uploadBytes(imgRef, file)\r\n            .then(response => {\r\n            this.getImages();\r\n        })\r\n            .catch(error => console.log(error));\r\n    }\r\n    getImages() {\r\n        const imagesRef = ref(this.storage, `imagen/`);\r\n        list(imagesRef)\r\n            .then(async)\r\n            .catch();\r\n    }\r\n}\r\nImageService.ɵfac = function ImageService_Factory(t) { return new (t || ImageService)(i0.ɵɵinject(i1.Storage)); };\r\nImageService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ImageService, factory: ImageService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}